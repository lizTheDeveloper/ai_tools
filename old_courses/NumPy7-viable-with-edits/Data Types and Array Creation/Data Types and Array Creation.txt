
- 



#### 1.1 Data Types 

There are four main data types in Python - int, float, bool and str. 

##### int 

The int data type holds whole numbers. An integer can be positive or negative, but cannot have a decimal point. 

##### float 

The float data type is for numbers with a decimal point. 

##### bool

The bool data type is for Boolean values - these are either True or False (with a capital T or F). 

##### str 

The str data type is for strings - these are a sequence of characters (letters, numbers, spaces, and/or punctuation). Strings can be enclosed by either single or double quotation marks. 



##### Example

Let's look at some examples of data types. 

```python 
type(3)
type(3.14)
type(True)
type('abc')
type("def")
type("ghi123")
type('jkl"mn"op')
```



#### 1.2 Array Creation 

Arrays give us a way to store and access a large number of variables efficiently. Arrays are similar to lists in that they hold a sequence of values, but there are some important differences between the two. 

##### Lists vs. Arrays 

- Lists can hold data of any type, while arrays can only hold data of the same type. 
- You can access individual elements of a list using an index, but you cannot do this with an array. 



##### Creating Arrays 

Arrays can be created using the ```array``` function. We'll look at some examples of how to create arrays below. 

```python
import array as arr
a = arr.array('d', [1.1, 3.5, 4.5])
print(a)
```



```python
import array as arr
a = arr.array('i', [2, 5, 1, 7, 4])
print(a)
```



##### Accessing Array Elements 

You can access individual elements of an array using an index. The index of the first element of an array is 0. 

```python
import array as arr
a = arr.array('d', [1.1, 3.5, 4.5])
print(a[0])
print(a[1])
print(a[2])
```



##### Updating Array Elements 

You can update individual elements of an array using an index. The index of the first element of an array is 0. 

```python
import array as arr
a = arr.array('d', [1.1, 3.5, 4.5])
a[0] = 5.5
a[1] = 2.5
a[2] = 3.5
print(a)
```



##### Deleting Array Elements 

You can delete individual elements of an array using an index. The index of the first element of an array is 0. 

```python
import array as arr
a = arr.array('d', [1.1, 3.5, 4.5])
del a[1]
print(a)
```



##### Looping Through an Array 

You can loop through the elements of an array using a ```for``` loop. 

```python
import array as arr
a = arr.array('d', [1.1, 3.5, 4.5])
for i in a:
  print(i)
```



##### Adding Elements to an Array 

You can add elements to the end of an array using the ```append()``` method. 

```python
import array as arr
a = arr.array('d', [1.1, 3.5, 4.5])
a.append(5.5)
print(a)
```



##### Removing Elements from an Array 

You can remove elements from an array using the ```remove()``` method. 

```python
import array as arr
a = arr.array('d', [1.1, 3.5, 4.5])
a.remove(3.5)
print(a)
```



##### Array Concatenation 

You can concatenate two arrays using